---
import LayoutSidebar from '../../app/LayoutSidebar.astro';
import { checkUserSession } from '../../utils/check-session';
import { pathRoutes } from '../../config/pathRoutes';
import EcosystemList from '../../components/Ecosystem/EcosystemList';
import { storageKeys } from '../../config/CommonConstant';
import { getFromCookies } from '../../api/Auth';
import { apiRoutes } from '../../config/apiRoutes';
import API from '../../config/ssrApiConfig';

const response = await checkUserSession({cookies: Astro.cookies, currentPath: Astro.url.pathname});
const route: string = pathRoutes.auth.sinIn
if (!response.authorized) {
	return Astro.redirect(response.redirect);
}

const orgId = await getFromCookies(Astro.cookies, storageKeys.ORG_ID);
const token = await getFromCookies(Astro.cookies, storageKeys.SESSION);

const ecosystemList = await API({
	url: `${apiRoutes.Ecosystem.root}/${orgId}`,
	method: "GET",
	token
});
---

<LayoutSidebar notFoundPage={!response.permitted}>
	<EcosystemList list={ecosystemList ? ecosystemList : []} client:visible />
</LayoutSidebar>
