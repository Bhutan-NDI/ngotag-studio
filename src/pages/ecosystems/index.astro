---
import LayoutSidebar from '../../app/LayoutSidebar.astro';
import { checkUserSession } from '../../utils/check-session';
import { pathRoutes } from '../../config/pathRoutes';
import EcosystemList from '../../components/Ecosystem/EcosystemList';
import { getEcosystems } from '../../api/ecosystem';
import { storageKeys } from '../../config/CommonConstant';
import { decryptCookie, getFromCookies } from '../../api/Auth';
import { getHeaderConfigs } from '../../config/GetHeaderConfigs';
import { envConfig } from '../../config/envConfig';
import { apiRoutes } from '../../config/apiRoutes';
import API from '../../config/ssrAPIConfig';

const response = await checkUserSession({cookies: Astro.cookies, currentPath: Astro.url.pathname});
const route: string = pathRoutes.auth.sinIn
if (!response.authorized) {
	return Astro.redirect(response.redirect);
}
const orgIdCookie = Astro.cookies.get(storageKeys.ORG_ID).value;
console.log(78676, orgIdCookie)
const orgId: string = orgIdCookie ? await decryptCookie(orgIdCookie) : '';
const token = Astro.cookies.get('session').value as string;

const ecosystemList = await API({
	url: `${apiRoutes.Ecosystem.root}/${orgId}`,
	method: "GET",
	token
});
console.log(4343, ecosystemList)
---

<LayoutSidebar notFoundPage={!response.permitted}>
	<EcosystemList list={ecosystemList ? ecosystemList : []} client:visible />
</LayoutSidebar>
