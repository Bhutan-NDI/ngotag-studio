---
import LayoutSidebar from '../../app/LayoutSidebar.astro';
import Dashboard from '../../components/organization/Dashboard';
import { checkUserSession } from '../../utils/check-session';
import { pathRoutes } from '../../config/pathRoutes';
import API from '../../config/ssrApiConfig';
import { apiRoutes } from '../../config/apiRoutes';
import { getFromCookies } from '../../api/Auth';

const response = await checkUserSession({
	cookies: Astro.cookies,
	currentPath: Astro.url.pathname,
});
const route: string = pathRoutes.auth.sinIn;
if (!response.authorized) {
	return Astro.redirect(response.redirect);
}

let orgId = getFromCookies(Astro.cookies, 'orgId');
const token = getFromCookies(Astro.cookies, 'session');

let selectedOrg;
let invitation;

if (orgId) {
	selectedOrg = await API({
		url: `${apiRoutes.organizations.root}/${orgId}`,
		token,
		method: 'GET',
	});

	// Connection QR Code
	const data = {
		label: selectedOrg?.orgName,
		multiUseInvitation: true,
		autoAcceptConnection: true,
		orgId: selectedOrg?.id,
	};
	invitation = await API({
		url: `${apiRoutes.organizations.root}/${orgId}${apiRoutes.connection.create}`,
		token,
		method: 'POST',
		payload: data,
	});
}
---

<LayoutSidebar notFoundPage={!response.permitted}>
	<Dashboard
		invitationSSR={invitation}
		orgDataSSR={selectedOrg}
		client:visible
	/>
</LayoutSidebar>
